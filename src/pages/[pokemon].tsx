import Head from "next/head";
import Stats from "../components/Pokemon/Stats";
import PokeImg from "../components/Pokemon/PokeImg";
import Types from "../components/Pokemon/Types";
import Description from "../components/Pokemon/Description";
import Species from "../components/Pokemon/Species";

import Container from "../components/Container";
import Details from "../components/Pokemon/Details/Details";

type Props = {
   pokemon: PokemonModel;
};
interface PokemonModel {
   name: string;
   img: string;
   hdImg: string;
   types: {
      slot: number;
      type: { name: string };
   }[];
   stats: {
      base_stat: number;
      stat: { name: string };
   }[];
   description: string;
   properties: {
      height: number;
      weight: number;
      gender: number;
      generation: string;
      abilities: {
         name: string;
         description: string;
      };
   };
   mainData: any;
   species: any;
   evolution: any;
}

const getData = async (url: string) => {
   const res = await fetch(url);
   return await res.json();
};
const getAbilities = async (abilities: any) => {
   let newArray: any = [];
   for (const item of abilities) {
      newArray.push({
         name: item.ability.name,
         description: await getData(item.ability.url).then((res) => {
            return res.flavor_text_entries.filter(
               (pok: any) => pok.language.name === "en"
            )[0].flavor_text;
         }),
      });
   }
   return await newArray;
};

export async function getServerSideProps({ query }: any) {
   const mainLink = `https://pokeapi.co/api/v2/pokemon/${query.pokemon}`;
   const mainData = await getData(mainLink);
   const species = await getData(mainData.species.url);
   const evolution = await getData(species.evolution_chain.url);
   const pokemon: PokemonModel = {
      name: mainData.name,
      img: mainData.sprites.front_default,
      hdImg: mainData.sprites.other["official-artwork"].front_default,
      stats: mainData.stats,
      types: mainData.types,
      description: species.flavor_text_entries.filter(
         (pok: any) => pok.language.name === "en"
      )[0].flavor_text,
      properties: {
         height: mainData.height,
         weight: mainData.weight,
         gender: species.gender_rate,
         generation: species.generation.name.substring(11).toUpperCase(),
         abilities: await getAbilities(mainData.abilities),
      },
      mainData: mainData,
      species: species,
      evolution: evolution,
   };
   return {
      props: { pokemon },
   };
}

export default function Pokemon({ pokemon }: Props) {
   console.log(pokemon);
   return (
      <>
         <Head>
            <title>{pokemon.name.toUpperCase()}</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <Container>
            <div className="bg-gray-200 p-7 space-y-7">
               <div className="grid sm:grid-cols-2 gap-5 w-full">
                  <PokeImg img={pokemon.img} hdImg={pokemon.hdImg} />
                  <div className="row-span-2 flex flex-col space-y-5">
                     <Description description={pokemon.description} />
                     <Details properties={pokemon.properties} />
                     <Types types={pokemon.types} />
                     <Species species={pokemon.species} />
                  </div>
                  <Stats stats={pokemon.stats} />
               </div>
               <div className="w-full h-96 rounded-lg bg-gray-700 shadow-lg"></div>
            </div>
         </Container>
      </>
   );
}
