import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import Card from "../containers/Card";

import { motion, AnimatePresence } from "framer-motion";
import Image from "next/image";
import { PokemonCardModel } from "../Model/PokemonModel";
import Container from "../components/Container";
import useAnimationContext from "../context/AnimationContext";
import SelectedImage from "../components/SelectedImage";

export async function getServerSideProps() {
   const res = await fetch("https://pokeapi.co/api/v2/pokemon?limit=898");
   const data = await res.json();
   return {
      props: { pokemons: data.results },
   };
}

const Home: NextPage = ({ pokemons }: any) => {
   const [filteredPokemons, setFilteredPokemons] = useState<PokemonCardModel[]>(
      []
   );

   const { selectedId, setSelectedId } = useAnimationContext();

   useEffect(() => {
      const doThis = async () => {
         const pokemonsArray = pokemons.slice(0, 20);
         const requestPromises = pokemonsArray.map(async (pokemon: any) => {
            const res = await fetch(pokemon.url);
            return await res.json();
         });
         const newData = await Promise.all(requestPromises);
         let newPokemons: PokemonCardModel[] = [];
         newData.map((poke: any) => {
            const { name, sprites, id, types } = poke;
            newPokemons.push({
               name: name,
               img: sprites.other["official-artwork"].front_default,
               // img: sprites.front_default,
               id: id,
               types: types,
            });
         });
         setFilteredPokemons(newPokemons);
      };
      doThis();
   }, [pokemons]);

   return (
      <>
         <Head>
            <title>Pok√©dex</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <div className="w-full">
            <div className="md:flex space-y-5 md:space-y-0 space-x-0 md:space-x-7 pb-5 md:pb-7">
               <div className="w-full h-10 bg-blue-500"></div>
               <div className="w-full h-10 bg-primary"></div>
            </div>

            <div className="w-full grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-5 md:gap-7 min-h-screen">
               {filteredPokemons.map((pokemon) => (
                  <Card
                     setSelectedId={setSelectedId}
                     pokemon={pokemon}
                     key={pokemon.id}
                  />
               ))}
            </div>
            <AnimatePresence>
               {selectedId && (
                  <SelectedImage
                     selectedId={selectedId}
                     setSelectedId={setSelectedId}
                  />
               )}
            </AnimatePresence>
         </div>
      </>
   );
};

export default Home;
