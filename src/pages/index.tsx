import type { NextPage } from "next";
import Head from "next/head";
import Card from "../containers/Card";

import { AnimatePresence } from "framer-motion";
import useAnimationContext from "../context/AnimationContext";
import SelectedImage from "../components/SelectedImage";
import Select from "../components/Select/Select";
import ShuffleBtn from "../components/ShuffleBtn";
import LoadMoreBtn from "../components/LoadMoreBtn";
import Loading from "../components/Loading";
import useDisplayedPokemons from "../hooks/useDisplayedPokemons";

const Home: NextPage = ({}: any) => {
   const { selectedId, setSelectedId } = useAnimationContext();
   const { displayed, getRandomPokemons, nextPage } = useDisplayedPokemons();

   return (
      <>
         <Head>
            <title>Pok√©dex</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <div className="w-full">
            <div className="grid grid-cols-2 gap-7 mb-7">
               <ShuffleBtn onClick={getRandomPokemons} />
               <Select />
            </div>

            <div className="w-full grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-5 md:gap-7 min-h-screen">
               {displayed.map((pokemon) => (
                  <Card
                     setSelectedId={setSelectedId}
                     pokemon={pokemon}
                     key={pokemon.id}
                  />
               ))}
            </div>

            <LoadMoreBtn onClick={nextPage} />
            {/* <Loading /> */}

            <AnimatePresence>
               {selectedId && (
                  <SelectedImage
                     selectedId={selectedId}
                     setSelectedId={setSelectedId}
                  />
               )}
            </AnimatePresence>
         </div>
      </>
   );
};

export default Home;
