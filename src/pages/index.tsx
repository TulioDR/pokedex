import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import Card from "../containers/Card";

import { motion, AnimatePresence } from "framer-motion";
import Image from "next/image";

export async function getServerSideProps() {
   const res = await fetch("https://pokeapi.co/api/v2/pokemon?limit=898");
   const data = await res.json();
   return {
      props: { pokemons: data.results },
   };
}

interface PokemonCard {
   name: string;
   img: string;
   id: number;
   types: {
      slot: number;
      name: string;
   }[];
}

const Home: NextPage = ({ pokemons }: any) => {
   const [filteredPokemons, setFilteredPokemons] = useState<PokemonCard[]>([]);

   useEffect(() => {
      const doThis = async () => {
         const pokemonsArray = pokemons.slice(0, 20);
         const requestPromises = pokemonsArray.map(async (pokemon: any) => {
            const res = await fetch(pokemon.url);
            return await res.json();
         });
         const newData = await Promise.all(requestPromises);
         let newPokemons: PokemonCard[] = [];
         newData.map((poke: any) => {
            const { name, sprites, id, types } = poke;
            newPokemons.push({
               name: name,
               img: sprites.front_default,
               id: id,
               types: types.map((type: any) => {
                  return {
                     slot: type.slot,
                     name: type.type.name,
                  };
               }),
            });
         });
         setFilteredPokemons(newPokemons);
      };
      doThis();
   }, []);

   const [selectedId, setSelectedId] = useState<null | string>(null);

   return (
      <>
         <Head>
            <title>Pok√©dex</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <div className="w-full p-5 md:p-7 sm:w-4/5 xl:w-2/3 mx-auto bg-gray-200">
            <div className="md:flex space-y-5 md:space-y-0 space-x-0 md:space-x-7 pb-5 md:pb-7">
               <div className="w-full h-10 bg-blue-500"></div>
               <div className="w-full h-10 bg-gray-500"></div>
            </div>
            <div className="w-full grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-4 gap-5 min-h-screen">
               {filteredPokemons.map((pokemon: PokemonCard) => (
                  <Card
                     setSelectedId={setSelectedId}
                     pokemon={pokemon}
                     key={pokemon.id}
                  />
               ))}
            </div>
            <AnimatePresence>
               {selectedId && (
                  <div className="fixed top-16 left-0 w-full">
                     <div className="p-7 grid grid-cols-2 gap-5 sm:w-4/5 xl:w-2/3 mx-auto">
                        <motion.div
                           onClick={() => setSelectedId(null)}
                           layoutId={selectedId}
                           bg-white
                           className="relative w-full aspect-square shadow-lg rounded-lg bg-white"
                        >
                           <Image src={selectedId} layout="fill" />
                        </motion.div>
                     </div>
                  </div>
               )}
            </AnimatePresence>
         </div>
      </>
   );
};

export default Home;
